# ASP.NET Core

# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: ubuntu-latest

variables:
  projectNameWebApi: 'App.WebApi'
  projectNameWebUiAdmin: 'App.WebUi.Admin'

stages:
- stage: dev
  displayName: Dev
  variables:
    buildConfiguration: 'Release'
  jobs:
  - job: deploy
    displayName: Deploy
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK 8.x'
      inputs:
        packageType: sdk
        version: '8.x'

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        
    - task: DotNetCoreCLI@2
      displayName: 'Build $(projectNameWebApi) - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/$(projectNameWebApi).csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish $(projectNameWebApi) - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/$(projectNameWebApi).csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      condition: succeeded()

    - task: AzureRmWebAppDeployment@4
      displayName: 'Publish $(projectNameWebApi)'
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Dev service connection quizapp'
        appType: 'webApp'
        WebAppName: 'ct-dev-quizapp-api'
        packageForLinux: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/**/$(projectNameWebApi).zip'